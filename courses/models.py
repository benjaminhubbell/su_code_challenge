from django.db import models

# Instructor model
# I have reduced some redundancy and combined the instructor 
# with the instructor info from the original data set
class Instructor(models.Model):
    netId = models.CharField(max_length=20, primary_key=True)
    lastName = models.CharField(max_length=20, default='')
    firstName = models.CharField(max_length=20, default='')
    emailAddress = models.CharField(max_length=30, default='')
    displayName = models.CharField(max_length=20, default='')
    nameLastFirstInitial = models.CharField(max_length=20, default='')
    campusPhone = models.CharField(max_length=20, default='')
    campusBuilding = models.CharField(max_length=20, default='')
    campusOfficeRoom = models.CharField(max_length=20, default='')
    photoUrl = models.TextField(default='')
    curriculumVitaePublicAccessFlag = models.BooleanField(default=False)
    curriculumVitaeUrl = models.TextField(default='')

# Course model, Instructor FK
class Course(models.Model):
    id = models.CharField(max_length=20, primary_key=True)
    classNumber = models.IntegerField(default=0)
    courseSubj = models.CharField(max_length=10)
    courseNum = models.IntegerField(default=0)
    courseIdSubjNum = models.CharField(max_length=20, default='')
    courseCredits = models.FloatField(default=0)
    courseTitle = models.CharField(max_length=100, default='')
    courseDescription = models.TextField(default='')
    classSection = models.CharField(max_length=10, default='')
    classStart = models.CharField(max_length=30, default='')
    classEnd = models.CharField(max_length=30, default='')
    classCampus = models.CharField(max_length=10, default='')
    classMon = models.BooleanField(default=False)
    classTue = models.BooleanField(default=False)
    classWed = models.BooleanField(default=False)
    classThu = models.BooleanField(default=False)
    classFri = models.BooleanField(default=False)
    classSat = models.BooleanField(default=False)
    classSun = models.BooleanField(default=False)
    classSessionCode = models.CharField(max_length=10, default='')
    classAcadCareer = models.CharField(max_length=10, default='')
    classLocationCode = models.CharField(max_length=10, default='')
    classInstructionMode = models.CharField(max_length=10, default='')
    classEnrollmentCapacity = models.IntegerField(default=0)
    classEnrollmentTotal = models.IntegerField(default=0)
    classNotes = models.TextField(default='', blank = True, null = True)
    lastUpdate = models.CharField(max_length=30, default='')
    isGrad = models.BooleanField(default=False)
    isOnline = models.BooleanField(default=False)
    classStartDate = models.CharField(max_length=30, default='')
    classEndDate = models.CharField(max_length=30, default='')
    classMeetingDays = models.CharField(max_length=30, default='')
    classMeetingTimes = models.CharField(max_length=100, default='')
    syllabusAccessFlag = models.BooleanField(default=False)
    syllabusAuthOnly = models.BooleanField(default=False)
    syllabusContentFileId = models.CharField(max_length=50, default='', blank = True, null = True)
    syllabusUrl = models.TextField(default='')
    professorOfRecord = models.CharField(max_length=50, default='', blank = True, null = True)
    instructor = models.ForeignKey(Instructor, on_delete=models.CASCADE, blank = True, null = True, related_name='courses')

#  Facility model, Autogenerated PK, CourseId FK
class Facility(models.Model):
    facilityId = models.CharField(max_length=20, default='')
    facilityShortName = models.CharField(max_length=20, default='')
    facilityDisplayName = models.CharField(max_length=20, default='')
    facilityCapacity = models.IntegerField(default=0)
    course = models.ForeignKey(Course, on_delete=models.CASCADE)

# Biography model, autogenerated PK, CourseId FK
class Biography(models.Model):
    bioType = models.CharField(max_length=20, default='')
    bioText = models.TextField(default='')
    instructor = models.ForeignKey(Instructor, on_delete=models.CASCADE)

# Job Title model, autogenerated PK
class JobTitle(models.Model):
    sortOrder = models.IntegerField(default=0)
    jobTitle = models.CharField(max_length=20, default='')
    instructor  = models.ForeignKey(Instructor, on_delete=models.CASCADE)

# Syllabus model, no data was present in the original data set, but we'll create the object
# as if there would be a future use for it
class SyllabusData(models.Model):
    course = models.ForeignKey(Course, on_delete=models.CASCADE, blank = True, null = True)
